import tkinter as tk
import time
import csv
from PIL import ImageTk, Image


def countdown(label, window, inputtxt):
    file_name = inputtxt.get("1.0", "end-1c")
    countdown_value = 3
    for i in range(countdown_value, -1, -1):
        label.config(text=str(i))
        label.update()
        time.sleep(1)
        
    inputtxt.pack_forget()  # Remove the text box
    start_timer(window, inputtxt, file_name)
    

def start_timer(window, inputtxt, file_name):
    toggle_image(panel1, panel2)
    start_time = time.perf_counter()
    countdown_label.config(text="Running")
    update_timer(window, start_time, file_name)

def key_press_handler(event, writer, start_time, file_name):
    key = event.char
    if key == 'a':
        img = Image.open("left.png")
        img = img.resize((100, 100))
        img = ImageTk.PhotoImage(img)
        panel = tk.Label(window, image=img)
        panel.image = img
        panel.place(x=650, y=400)
    elif key == 'd':
        img = Image.open("right.png")
        img = img.resize((100, 100))
        img = ImageTk.PhotoImage(img)
        panel = tk.Label(window, image=img)
        panel.image = img
        panel.place(x=650, y=400)

    with open(file_name, 'a', newline='') as f:
        writer = csv.writer(f)
        elapsed_time = time.perf_counter() - start_time
        print(f"Key pressed: {key}, Time elapsed: {elapsed_time:.2f}")
        row = [elapsed_time, key]
        writer.writerow(row)
       
        

def update_timer(window, start_time, file_name):
    with open(file_name, 'a', newline='') as f:
        writer = csv.writer(f)
        if f.tell() == 0:  # Check if the file is empty
            header = ['time', 'key']
            writer.writerow(header)

        elapsed_time = time.perf_counter() - start_time
        time_label.config(text=f"Time elapsed: {elapsed_time:.2f} seconds")

        # Capture key presses here
        window.bind('<Key>', lambda event: key_press_handler(event, writer, start_time, file_name))
        window.after(10, update_timer, window, start_time, file_name)

def open_img():
    img = Image.open("checkerboard.jpg")
    img = img.resize((500, 800))
    img = ImageTk.PhotoImage(img)
    panel = tk.Label(window, image=img)
    panel.image = img
    panel.place(x=900, y=0)
    return panel

def open_img1():
    img = Image.open("checkerboard.jpg")
    img = img.resize((500, 800))
    img = ImageTk.PhotoImage(img)
    panel = tk.Label(window, image=img)
    panel.image = img
    panel.place(x=0, y=0)
    return panel

def toggle_image(panel1, panel2):
    if panel1.winfo_ismapped():
        panel1.place_forget()
        panel2.place(x=900, y=0)
    else:
        panel2.place_forget()
        panel1.place(x=0, y=0)

    window.after(20, toggle_image, panel1, panel2)


window = tk.Tk()
canvas = tk.Canvas(window, width=1200, height=800)
window.geometry("1500x1000")
window.configure(bg='grey')
canvas.configure(bg='grey')
window.title("Brain Computer Interface GUI")

panel1 = open_img1()
panel2 = open_img()

inputtxt = tk.Text(window, height=5, width=20)
countdown_label = tk.Label(window, text="", font=('Arial', 30))
countdown_label.pack()
time_label = tk.Label(window, text="Timer not started", font=('Arial', 20))
time_label.pack()

# Unbind the text widget from capturing key events
inputtxt.unbind('<Key>')
inputtxt.pack()

printButton = tk.Button(window, text="Print", command=lambda: countdown(countdown_label, window, inputtxt))
printButton.pack()

canvas.pack()

  # Start flashing the images

window.mainloop()
